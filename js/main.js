'use strict';

/*  Task 1
  –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é checkNumberType(num)
  
  –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —á–∏—Å–ª–æ num –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 
  —Å—Ç—Ä–æ–∫—É "Even" –µ—Å–ª–∏ —á–∏—Å–ª–æ —á–µ—Ç–Ω–æ–µ –∏ —Å—Ç—Ä–æ–∫—É "Odd" –µ—Å–ª–∏ –Ω–µ —á–µ—Ç–Ω–æ–µ.
*/
const checkNumberType = function (num){

    if (num % 2 === 0) {
        num = 'Even';
    } else {
        num = 'Odd';
    }
    return num;
  }
  
  // –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  console.log( checkNumberType(2) ); // 'Even'
  
  console.log( checkNumberType(46) ); // 'Even'
  
  console.log( checkNumberType(3) ); // 'Odd'
  
  console.log( checkNumberType(17) ); // 'Odd'

//   ========================================================================

  /* Task 2
  –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é formatString(str)
  
  - –§—É–Ω–∫–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å—Ç—Ä–æ–∫—É str
  - –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 40 —Å–∏–º–≤–æ–ª–æ–≤, —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–µ. 
  - –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ –±–æ–ª—å—à–µ 40 —Å–∏–º–≤–æ–ª–æ–≤, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–µ–∑–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–æ 40-—Ç–∏
    —Å–∏–º–≤–æ–ª–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏ —Ç—Ä–æ–µ—Ç–æ—á–∏–µ '...', –ø–æ—Å–ª–µ —á–µ–≥–æ 
    –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫–æ—Ä–æ—á–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é.
*/


const formatString = function(str){
    if (str.length > 40) {
        return str.substr(0, 41) + '...';
    } else {
        return str;
    }
}
// –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
console.log(
    formatString("Curabitur ligula sapien, tincidunt non.")
  ); // –≤–µ—Ä–Ω–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
  
  console.log(
    formatString("Vestibulum facilisis, purus nec pulvinar iaculis.")
  ); // –≤–µ—Ä–Ω–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
  
  console.log(
    formatString("Curabitur ligula sapien.")
  ); // –≤–µ—Ä–Ω–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
  
  console.log(
    formatString("Nunc sed turpis. Curabitur a felis in nunc fringilla tristique.")
  ); // –≤–µ—Ä–Ω–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞

// =============================================================

  /* Task 3
  –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é checkForSpam(str)
  
  –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 1 –ø–∞—Ä–∞–º–µ—Ç—Ä str - —Å—Ç—Ä–æ–∫—É,
  –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –µ–µ –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–ª–æ–≤: spam –∏ sale
  
  –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –∑–∞—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true,
  –µ—Å–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –Ω–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false
  
  PS: —Å–ª–æ–≤–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
*/
const checkForSpam = function(str) {
    const lowerStr = str.toLowerCase();
    return (lowerStr.includes('spam') || lowerStr.includes('sale'));
  }
  // –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  console.log('Latest technology news', checkForSpam('Latest technology news') ); // false
  
  console.log('JavaScript weekly newsletter', checkForSpam('JavaScript weekly newsletter') ); // false
  
  console.log('Get best sale offers now!', checkForSpam('Get best sale offers now!') ); // true
  
  console.log('[SPAM] How to earn fast money?', checkForSpam('[SPAM] How to earn fast money?') ); // true
  
//  =========================================================

//   Task 4
  
//   –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, getPx(str) 

//   –§—É–Ω–∫—Ü–∏—è getPx –¥–æ–ª–∂–Ω–∞ –ø–æ–ª—É—á–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞ '10px',
//   –ø—Ä–æ–≤–µ—Ä—è—Ç—å –±—ã–ª–∞ –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞, –µ—Å–ª–∏ –¥–∞, 
//   –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—É—é —Å–æ—Å—Ç–∞–≤–ª—è—é—â—É—é, –∫ –ø—Ä–∏–º–µ—Ä—É 10.
    
//   –ï—Å–ª–∏ –±—ã–ª–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –Ω–µ —Å—Ç—Ä–æ–∫–∞, —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null.

const getPx = function(str){
    if (typeof str === 'string') {

       let strPars = Number.parseFloat(str);
       return strPars;
    } else {
        return null;
    }

}

// –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
console.log( getPx("10px") === 10 ); // –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:  true
console.log( getPx("10.5") === 10.5 ); // –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:  true
console.log( getPx("0") === 0 ); // –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:  true
console.log( getPx(-1) ); // –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:  null
console.log( getPx(10) ); // –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:  null


// ===============================================================

/*  Task 5
  –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–∫–Ω—Ü–∏—é findLongestWord(str),
  –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏
  –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ.   
  
  –í–∞–∂–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ - –≤ —Å—Ç—Ä–æ–∫–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã
  –∏ —Å–∏–º–≤–æ–ª—ã –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä!
*/


// –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

const findLongestWord = function(str){
	let strSplit = str.split(' ');
	let lengthStr = 0;
	let strReturn = ' ';
	
	strSplit.forEach(function(strSplit){
		if (lengthStr < strSplit.length) {
			lengthStr = strSplit.length;
			strReturn = strSplit;
		}
	});
	
	return strReturn;
} 


console.log(
  findLongestWord("The quick brown fox jumped over the lazy dog")
); // –≤–µ—Ä–Ω–µ—Ç 'jumped'

console.log(
  findLongestWord("Google do a roll")
); // –≤–µ—Ä–Ω–µ—Ç 'Google'

console.log(
  findLongestWord("May the force be with you")
); // –≤–µ—Ä–Ω–µ—Ç 'force'

// =============================================
/*  Taask 6
  –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é findLargestNumber(numbers), 
  –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª numbers, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 
  —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ.
*/
function findLargestNumber(numbers){
  
  for (let i = 0; i < numbers.length; i+=1) {
    if (numbers[i] > numbers[0]) {
      numbers[0] = numbers[i];
    }
    
  }
  return numbers[0];
}
// –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
console.log(
  findLargestNumber([1, 2, 3])
); // –≤–µ—Ä–Ω–µ—Ç 3

console.log(
  findLargestNumber([27, 12, 18, 5])
); // –≤–µ—Ä–Ω–µ—Ç 27

console.log(
  findLargestNumber([31, 128, 14, 74])
); // –≤–µ—Ä–Ω–µ—Ç 128

// ====================================


/*  Task 7
  –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª uniqueNumbers.
  
  –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, addUniqueNumbers(...), 
  –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —á–∏—Å–µ–ª –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, 
  –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –º–∞—Å—Å–∏–≤ uniqueNumbers —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ,
  –∞ —Ç–µ –∫–æ—Ç–æ—Ä—ã–µ –≤ –º–∞—Å—Å–∏–≤–µ —É–∂–µ –µ—Å—Ç—å –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç.
*/

const uniqueNumbers  = [2, 1, 4, 9];
// function addUniqueNumbers (...arg){
//   const arr = Array.from(arg);
//   for (let i = 0; i < uniqueNumbers.length; i += 1) {
    
//     if (uniqueNumbers.includes(arr[i]) === true) {
//       delete arr[i];
//     } else {
//       uniqueNumbers.push(arg[i]);
//     }
    
//   }
 
// }
const addUniqueNumbers = (...arg) => {
  for (let i = 0; i < arg.length; i += 1) {
    if (!uniqueNumbers.includes(arg[i])) {
      uniqueNumbers.push(arg[i]);
    }
  }
  return uniqueNumbers;
}

// –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
addUniqueNumbers(1, 2, 3);
console.log(uniqueNumbers); // [2, 1, 4, 9, 3]

addUniqueNumbers(12, 2, 3, 19);
console.log(uniqueNumbers); // [2, 1, 4, 9, 3, 12, 19]

addUniqueNumbers(4, 5, 12, 3, 1, 2, 8);
console.log(uniqueNumbers); // [2, 1, 4, 9, 3, 12, 19, 5, 8]

// =================================
/* task 8
  –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é removeFromArray(arr), 
  –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç 1 –ø–∞—Ä–∞–º–µ—Ç—Ä, –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ arr.
  
  –ü—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏, –ø–µ—Ä–≤—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª,
  –∑–∞ –∫–æ—Ç–æ—Ä—ã–º —Å–ª–µ–¥—É—é—Ç –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, —Ç–æ–∂–µ —á–∏—Å–µ–ª. 
  
  –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, 
  –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç —Ç–∞–∫–æ–µ –∂–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã.
*/

function removeFromArray(arr, ...val){
  for (let i = 0; i < val.length; i += 1) {
    // console.log(val[i]);
    if (arr.indexOf(val[i])>0) {
      arr.splice(arr.indexOf(val), 1);
    }
    
  }
  return arr;
}

// –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
console.log(
  removeFromArray([1, 2, 3, 4, 5], 2, 4)
); // [1, 3, 5]

console.log(
  removeFromArray([12, 4, 3, 8, 17], 3, 29, 18, 4)
); // [12, 8, 17]

// =================================================================


/*
  –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ logins —Å –ª–æ–≥–∏–Ω–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏–Ω–∞ –≤ –º–∞—Å—Å–∏–≤ logins.
  
  –î–æ–±–∞–≤–ª—è–µ–º—ã–π –ª–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω:
    - –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –¥–ª–∏–Ω—É –æ—Ç 4 –¥–æ 16-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ
    - –±—ã—Ç—å —É–Ω–∏–∫–∞–ª–µ–Ω, —Ç–æ –µ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ logins
 
  üîî –†–∞–∑–±–µ–π—Ç–µ –∑–∞–¥–∞—á—É –Ω–∞ –ø–æ–¥–∑–∞–¥–∞—á–∏ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–π.
  
  –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é isLoginValid (login) {}, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ 
  –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ login –∏ –≤–µ—Ä–Ω–∏—Ç–µ true –∏–ª–∏ false –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –ø–æ–ø–∞–¥–∞–µ—Ç –ª–∏ –¥–ª–∏–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ 
  –≤ –∑–∞–¥–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 4-—Ö –¥–æ 16-—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.
 
  –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é isLoginUnique(allLogins, login) {}, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–æ–≥–∏–Ω –∏ —Å–ø–∏—Å–æ–∫ 
  –≤—Å–µ—Ö –ª–æ–≥–∏–Ω–æ–≤ –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ login –≤ –º–∞—Å—Å–∏–≤–µ allLogins, –≤–æ–∑–≤—Ä–∞—â–∞—è true 
  –µ—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ª–æ–≥–∏–Ω–∞ –µ—â–µ –Ω–µ—Ç –∏ false –µ—Å–ª–∏ –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è.
  –î–∞–ª–µ–µ –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é addLogin(logins, login) –∫–æ—Ç–æ—Ä–∞—è:
    - –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω –∏ –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –ª–æ–≥–∏–Ω–æ–≤ –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é isLoginValid
    - –ï—Å–ª–∏ –ª–æ–≥–∏–Ω –Ω–µ –≤–∞–ª–∏–¥–µ–Ω, –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ addLogin 
      –∏ –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤'
    - –ï—Å–ª–∏ –ª–æ–≥–∏–Ω –≤–∞–ª–∏–¥–µ–Ω, —Ñ—É–Ω–∫—Ü–∏—è addLogin –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ 
      —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ isLoginUnique
    - –ï—Å–ª–∏ isLoginUnique –≤–µ—Ä–Ω–µ—Ç true, addLogin –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ª–æ–≥–∏–Ω 
       –≤ logins –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É '–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!'
    - –ï—Å–ª–∏ isLoginUnique –≤–µ—Ä–Ω–µ—Ç false, —Ç–æ–≥–¥–∞ addLogin –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç 
       –ª–æ–≥–∏–Ω –≤ –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!'
       
  üîî –ü—Ä–∏–Ω—Ü–∏–ø –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ - –∫–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ. –≠—Ç–æ 
     –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–¥ –∏ –∏–∑–º–µ–Ω—è—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ, 
     –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—è —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ —Ü–µ–ª–æ–º. –ü—Ä–µ–¥–∏–∫–∞—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —Ç–æ–ª—å–∫–æ true –∏–ª–∏ 
     false. –¢–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–Ω—è—Ç–æ –Ω–∞–∑—ã–≤–∞—Ç—å –Ω–∞—á–∏–Ω–∞—è —Å is: isLoginUnique –∏ isLoginValid –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ.
      - isLoginUnique —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –ª–æ–≥–∏–Ω –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∏–ª–∏ false. 
      - isLoginValid —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–π –ª–∏ –ª–æ–≥–∏–Ω –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∏–ª–∏ false.
      - addLogin –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏–Ω –≤ –º–∞—Å—Å–∏–≤. –ü—Ä–∏ —ç—Ç–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫ —É—Å–ª–æ–≤–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è 
        –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–∑–æ–≤–æ–≤ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π - isLoginUnique –∏ isLoginValid.
*/



const logins = ["Mango", "robotGoogles", "Poly", "Aj4x1sBozz", "qwerty123"];
const updatedLoginBase = [logins];
let login = prompt('–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω');

const isLoginValid = function(login) {
  if (4 <= login.length && login.length <= 16) {
    return true;
}
return false;

  // if (login.length <= 4 || login.length >= 16) {
	// return false;
	// } 
	// return true;
};
const checkIsLoginValid = isLoginValid(login);
  
// 	if (input === null) {
// 		console.log('–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω');
// 	} else if (input.length <= 4 || input.length >= 16) {
// 		console.log(false);
// 	} else {
// 		console.log(true);
// 	} return;
// };
// isLoginValid();

const isLoginUnique = function(logins, login) {
  if (logins.includes(login)) {
   return true;
  }
  return false;
  };

const checkIsLoginUnique = isLoginUnique(logins, login);

const addLogin = function(logins, login) {
  
  if (!checkIsLoginValid){
    return console.log('–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤');
  }
  if (!checkIsLoginUnique) {
    logins.push(login);
  }
  
};
addLogin(logins,login);

// –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
// addLogin('Ajax'); // '–õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!'
// addLogin('robotGoogles'); // '–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!'
// addLogin('Zod'); // '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤'
// addLogin('jqueryisextremelyfast'); // '–û—à–∏–±–∫–∞! –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 4 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤'
console.log('updated base of logins: ', logins);
